<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oap="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--装配业务层对象-->
    <bean id="userService" class="edu.nf.ch15.service.impl.UserServiceImpl"/>
    <!--配置切面-->
    <bean id="userServiceAspect" class="edu.nf.ch15.aspect.UserServiceAspect"/>
    <!--AOP配置
        proxy-target-class默认值为false，会自动选择生成方式，如果是true表示强制使用cglib生成代理-->
    <oap:config proxy-target-class="true">
        <!--配置切入点，spring使用了AspectJ的切入点表达式来配置切入点
        通过切入点表达式可以定位到需要增强的目标方法,这些目标方法就称之为连接点-->
        <!--execution(访问修饰符 [方法返回值类型] 完整类名(参数类型))-->
        <oap:pointcut id="myPointcut" expression="execution(* edu.nf.ch15.service.impl.UserServiceImpl.*(..))"/>
        <!--使用within表达式，它是融入到级别中的-->
       <!--<oap:pointcut id="myPointcut2" expression="within(edu.nf.ch15.service.impl.*)"/>-->
        <!--配置Advisor（通知其，也就是切面）
        advice-ref制定上面切面的id，
        pointcut-ref指定切入点的id-->
        <oap:advisor advice-ref="userServiceAspect" pointcut-ref="myPointcut"/>
    </oap:config>
</beans>