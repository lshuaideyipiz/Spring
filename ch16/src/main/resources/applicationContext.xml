<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean id="userService" class="edu.nf.ch16.service.impl.UserServiceImpl"/>
    <!--切面-->
    <bean id="userServiceAspect" class="edu.nf.ch16.aspect.UserServiceAspect"/>
    <!--AOP-->
    <aop:config>
        <!--切入点-->
        <aop:pointcut id="myPointcut" expression="execution(* edu.nf.ch16.service.impl.*.*(..))"/>
        <!--配置切面,ref为上面切面的id-->
        <aop:aspect ref="userServiceAspect">
            <!--配置各种通知,method对应切面类中对应的方法名
                pointcut-ref对应切点
                如果pointcut-ref不满足需求，可以使用pointcut自定义表达式-->
            <aop:before method="before" pointcut-ref="myPointcut" />
            <aop:around method="around" pointcut-ref="myPointcut"/>
            <!--后置通知中的return对应的是returning的返回值参数名-->
            <aop:after-returning method="afterReturning" pointcut-ref="myPointcut" returning="returnVal"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="myPointcut" throwing="e"/>
            <aop:after method="after" pointcut-ref="myPointcut"/>
        </aop:aspect>
    </aop:config>
</beans>